if (module.hot) {
    module.hot.accept("./combineReducer", () => {
      const nextRootReducer = combineReducer;
      store.replaceReducer(nextRootReducer);
    });
  }

  if (module.hot) {
  module.hot.accept("./App", () => {
    const NextApp = require("./App").default;
    render(NextApp);
  });
}

"compilerOptions": {
      "types": ["webpack-env"]
    }

    {/* <Routes>
            {React.Children.toArray(
              Object.values(routes).map((route) => 
                <Route
                  path={route.parentKey}
                  element={<route.parentComponent />}
                >
                  {React.Children.toArray(route.childRoutes.map((childRoute) => 
                      <Route
                        path={childRoute.path}
                        element={<childRoute.component />}
                      />
                    ))
                  }
                </Route>
              )
            )}
          </Routes> */}